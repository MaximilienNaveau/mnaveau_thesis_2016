%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.18.4 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 431 297
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[1 0 0 1 -1 -6] cm
q
[1 0 0 1 0 0] cm
-1 -1 448.9505 304.6293 re
W
[1 0 0 1 0 0] cm
false op
false OP
0 J
0 j
1.4173 w
22.925586 M
[] 0 d
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 1 0.82] sc
201.0512 28.7957 m
201.0512 27.6216 200.0993 26.6698 198.9252 26.6698 c
197.7511 26.6698 196.7992 27.6216 196.7992 28.7957 c
196.7992 32.2566 l
180.7818 34.4531 l
179.6216 34.609 178.8072 35.6763 178.9631 36.8365 c
179.0952 37.8187 179.8804 38.5532 180.8223 38.6609 c
201.1856 41.4536 l
180.7818 44.2514 l
179.6216 44.4073 178.8072 45.4745 178.9631 46.6347 c
179.0952 47.6169 179.8804 48.3514 180.8223 48.4591 c
201.1867 51.2518 l
180.7818 54.0505 l
179.6216 54.2064 178.8072 55.2736 178.9631 56.4338 c
179.0952 57.416 179.8804 58.1505 180.8223 58.2582 c
201.1844 61.0503 l
180.7818 63.8481 l
179.6216 64.004 178.8072 65.0713 178.9631 66.2315 c
179.0952 67.2137 179.8801 67.9484 180.822 68.0559 c
201.1859 70.8486 l
198.644 71.1972 l
197.5788 71.3404 196.8049 72.252 196.8063 73.2983 c
196.8004 73.2983 l
196.8004 79.0982 l
196.8004 80.2723 197.7523 81.2242 198.9264 81.2242 c
200.1005 81.2242 201.0523 80.2723 201.0523 79.0982 c
201.0523 75.1465 l
217.0304 72.9556 l
217.9723 72.8478 218.7575 72.1134 218.8896 71.1312 c
219.0455 69.971 218.2311 68.9037 217.0709 68.7478 c
196.6669 65.9494 l
217.0304 63.157 l
217.9723 63.0493 218.7575 62.3149 218.8896 61.3327 c
219.0455 60.1724 218.2311 59.1052 217.0709 58.9493 c
196.6669 56.1512 l
217.0307 53.3585 l
217.9726 53.2511 218.7575 52.5163 218.8896 51.5341 c
219.0455 50.3739 218.2311 49.3067 217.0709 49.1508 c
196.6671 46.3524 l
217.0304 43.5603 l
217.9723 43.4526 218.7575 42.7181 218.8896 41.7359 c
219.0455 40.5757 218.2311 39.5084 217.0709 39.3525 c
196.6669 36.5542 l
199.0562 36.2265 l
200.1694 36.1587 201.0512 35.2349 201.0512 34.1048 c
201.0512 28.7957 l
h
f
201.0512 28.7957 m
201.0512 27.6216 200.0993 26.6698 198.9252 26.6698 c
197.7511 26.6698 196.7992 27.6216 196.7992 28.7957 c
196.7992 32.2566 l
180.7818 34.4531 l
179.6216 34.609 178.8072 35.6763 178.9631 36.8365 c
179.0952 37.8187 179.8804 38.5532 180.8223 38.6609 c
201.1856 41.4536 l
180.7818 44.2514 l
179.6216 44.4073 178.8072 45.4745 178.9631 46.6347 c
179.0952 47.6169 179.8804 48.3514 180.8223 48.4591 c
201.1867 51.2518 l
180.7818 54.0505 l
179.6216 54.2064 178.8072 55.2736 178.9631 56.4338 c
179.0952 57.416 179.8804 58.1505 180.8223 58.2582 c
201.1844 61.0503 l
180.7818 63.8481 l
179.6216 64.004 178.8072 65.0713 178.9631 66.2315 c
179.0952 67.2137 179.8801 67.9484 180.822 68.0559 c
201.1859 70.8486 l
198.644 71.1972 l
197.5788 71.3404 196.8049 72.252 196.8063 73.2983 c
196.8004 73.2983 l
196.8004 79.0982 l
196.8004 80.2723 197.7523 81.2242 198.9264 81.2242 c
200.1005 81.2242 201.0523 80.2723 201.0523 79.0982 c
201.0523 75.1465 l
217.0304 72.9556 l
217.9723 72.8478 218.7575 72.1134 218.8896 71.1312 c
219.0455 69.971 218.2311 68.9037 217.0709 68.7478 c
196.6669 65.9494 l
217.0304 63.157 l
217.9723 63.0493 218.7575 62.3149 218.8896 61.3327 c
219.0455 60.1724 218.2311 59.1052 217.0709 58.9493 c
196.6669 56.1512 l
217.0307 53.3585 l
217.9726 53.2511 218.7575 52.5163 218.8896 51.5341 c
219.0455 50.3739 218.2311 49.3067 217.0709 49.1508 c
196.6671 46.3524 l
217.0304 43.5603 l
217.9723 43.4526 218.7575 42.7181 218.8896 41.7359 c
219.0455 40.5757 218.2311 39.5084 217.0709 39.3525 c
196.6669 36.5542 l
199.0562 36.2265 l
200.1694 36.1587 201.0512 35.2349 201.0512 34.1048 c
201.0512 28.7957 l
h
S
false op
false OP
/DeviceRGB {} cs
[0.14 0.45 0] sc
168.3329 180.5284 70.3678 32.9998 re
f*
false op
false OP
0 J
0 j
1.4173 w
22.925586 M
[] 0 d
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0.86 0.9 0] sc
415.8224 44.2434 m
415.705 48.155 418.7815 51.4219 422.6933 51.5395 c
426.6051 51.6572 429.872 48.5793 429.9891 44.6692 c
430.0778 41.705 430.1671 38.7397 430.2561 35.7752 c
430.9016 22.373 424.3972 7.7406 403.8891 7.1178 c
198.5771 7.1178 l
9.5125 7.1178 l
5.5987 7.1178 2.4259 10.2906 2.4259 14.2044 c
2.4259 18.1182 5.5987 21.291 9.5125 21.291 c
191.4905 21.291 l
191.4905 29.683 l
205.6637 29.683 l
205.6637 21.291 l
399.8392 21.291 l
413.3222 22.1083 416.1898 27.5885 416.1206 34.3003 c
416.0214 37.6149 415.9216 40.93 415.8224 44.2434 c
h
f
415.8224 44.2434 m
415.705 48.155 418.7815 51.4219 422.6933 51.5395 c
426.6051 51.6572 429.872 48.5793 429.9891 44.6692 c
430.0778 41.705 430.1671 38.7397 430.2561 35.7752 c
430.9016 22.373 424.3972 7.7406 403.8891 7.1178 c
198.5771 7.1178 l
9.5125 7.1178 l
5.5987 7.1178 2.4259 10.2906 2.4259 14.2044 c
2.4259 18.1182 5.5987 21.291 9.5125 21.291 c
191.4905 21.291 l
191.4905 29.683 l
205.6637 29.683 l
205.6637 21.291 l
399.8392 21.291 l
413.3222 22.1083 416.1898 27.5885 416.1206 34.3003 c
416.0214 37.6149 415.9216 40.93 415.8224 44.2434 c
h
S
false op
false OP
0 J
0 j
1.4173 w
22.925586 M
[] 0 d
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[1 0.7 0] sc
206.013 88.0903 m
206.013 79.0982 l
191.8397 79.0982 l
191.8397 88.1901 l
123.9403 88.6156 l
120.0515 88.6309 116.9093 91.7889 116.9096 95.6744 c
116.8815 95.6744 l
116.8815 197.0286 l
116.8815 200.9424 120.0543 204.1152 123.9681 204.1152 c
265.2616 204.1152 l
273.8846 204.1152 l
277.7984 204.1152 280.9712 200.9424 280.9712 197.0286 c
280.9712 94.7347 l
280.9712 90.8209 277.7984 87.6481 273.8846 87.6481 c
273.6584 87.6481 273.4347 87.6589 273.2139 87.6798 c
206.013 88.0903 l
h
266.798 189.942 m
265.2616 189.942 l
131.0547 189.942 l
131.0547 102.689 l
266.798 101.838 l
266.798 189.942 l
h
f
206.013 88.0903 m
206.013 79.0982 l
191.8397 79.0982 l
191.8397 88.1901 l
123.9403 88.6156 l
120.0515 88.6309 116.9093 91.7889 116.9096 95.6744 c
116.8815 95.6744 l
116.8815 197.0286 l
116.8815 200.9424 120.0543 204.1152 123.9681 204.1152 c
265.2616 204.1152 l
273.8846 204.1152 l
277.7984 204.1152 280.9712 200.9424 280.9712 197.0286 c
280.9712 94.7347 l
280.9712 90.8209 277.7984 87.6481 273.8846 87.6481 c
273.6584 87.6481 273.4347 87.6589 273.2139 87.6798 c
206.013 88.0903 l
h
266.798 189.942 m
265.2616 189.942 l
131.0547 189.942 l
131.0547 102.689 l
266.798 101.838 l
266.798 189.942 l
h
S
false op
false OP
0 J
0 j
1.4173 w
22.925586 M
[] 0 d
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[1 0.7 0] sc
238.7007 173.4418 m
168.3329 173.4418 l
161.2463 173.4418 l
161.2463 180.5284 l
161.2463 213.5282 l
161.2463 220.6148 l
168.3329 220.6148 l
238.7007 220.6148 l
245.7873 220.6148 l
245.7873 213.5282 l
245.7873 180.5284 l
245.7873 173.4418 l
238.7007 173.4418 l
h
f
238.7007 173.4418 m
168.3329 173.4418 l
161.2463 173.4418 l
161.2463 180.5284 l
161.2463 213.5282 l
161.2463 220.6148 l
168.3329 220.6148 l
238.7007 220.6148 l
245.7873 220.6148 l
245.7873 213.5282 l
245.7873 180.5284 l
245.7873 173.4418 l
238.7007 173.4418 l
h
S
false op
false OP
0 J
0 j
1.4173 w
22.925586 M
[] 0 d
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[1 0.4 0] sc
197.1499 200.101 m
246.1649 301.9207 l
261.9714 301.9207 l
209.8837 193.9555 l
197.1499 200.101 l
h
f
197.1499 200.101 m
246.1649 301.9207 l
261.9714 301.9207 l
209.8837 193.9555 l
197.1499 200.101 l
h
S
false op
false OP
/DeviceRGB {} cs
[1 0.7 0] sc
203.5168 180.5284 m
194.4043 180.5284 187.0169 187.9157 187.0169 197.0283 c
187.0169 206.1408 194.4043 213.5282 203.5168 213.5282 c
212.6293 213.5282 220.0167 206.1408 220.0167 197.0283 c
220.0167 187.9157 212.6293 180.5284 203.5168 180.5284 c
f*
false op
false OP
0 J
0 j
1.4173 w
22.925586 M
[] 0 d
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[1 0.4 0] sc
203.5168 173.4418 m
197.0039 173.4418 191.1073 176.0822 186.8391 180.3506 c
182.5707 184.6188 179.9303 190.5154 179.9303 197.0283 c
179.9303 203.5406 182.5707 209.4375 186.8391 213.7059 c
191.1073 217.9743 197.0039 220.6148 203.5168 220.6148 c
210.0291 220.6148 215.926 217.9743 220.1944 213.7059 c
224.4628 209.4375 227.1033 203.5406 227.1033 197.0283 c
227.1033 190.5154 224.4628 184.6188 220.1944 180.3506 c
215.926 176.0822 210.0291 173.4418 203.5168 173.4418 c
h
196.8602 190.3717 m
198.5632 188.6686 200.9169 187.615 203.5168 187.615 c
206.1164 187.615 208.4703 188.6686 210.1734 190.3717 c
211.8764 192.0747 212.9301 194.4283 212.9301 197.0283 c
212.9301 199.6279 211.8764 201.9818 210.1734 203.6849 c
208.4703 205.3879 206.1164 206.4416 203.5168 206.4416 c
200.9169 206.4416 198.5632 205.3879 196.8602 203.6849 c
195.1571 201.9818 194.1035 199.6279 194.1035 197.0283 c
194.1035 194.4283 195.1571 192.0747 196.8602 190.3717 c
h
f
203.5168 173.4418 m
197.0039 173.4418 191.1073 176.0822 186.8391 180.3506 c
182.5707 184.6188 179.9303 190.5154 179.9303 197.0283 c
179.9303 203.5406 182.5707 209.4375 186.8391 213.7059 c
191.1073 217.9743 197.0039 220.6148 203.5168 220.6148 c
210.0291 220.6148 215.926 217.9743 220.1944 213.7059 c
224.4628 209.4375 227.1033 203.5406 227.1033 197.0283 c
227.1033 190.5154 224.4628 184.6188 220.1944 180.3506 c
215.926 176.0822 210.0291 173.4418 203.5168 173.4418 c
h
196.8602 190.3717 m
198.5632 188.6686 200.9169 187.615 203.5168 187.615 c
206.1164 187.615 208.4703 188.6686 210.1734 190.3717 c
211.8764 192.0747 212.9301 194.4283 212.9301 197.0283 c
212.9301 199.6279 211.8764 201.9818 210.1734 203.6849 c
208.4703 205.3879 206.1164 206.4416 203.5168 206.4416 c
200.9169 206.4416 198.5632 205.3879 196.8602 203.6849 c
195.1571 201.9818 194.1035 199.6279 194.1035 197.0283 c
194.1035 194.4283 195.1571 192.0747 196.8602 190.3717 c
h
S
false op
false OP
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
