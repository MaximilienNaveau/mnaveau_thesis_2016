%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.18.4 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 321 593
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font PFVZWD+TimesNewRomanPS-ItalicMT
16 dict begin
/FontName /PFVZWD+TimesNewRomanPS-ItalicMT_00 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-498 -307 1333 1023] def
/PaintType 0 def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
5 1 255 { 1 index exch /.notdef put } for
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89DCAEC6987A783181E687D6392CB3DF
C3438E7470F1FA9D0D90246F28845411E78CF5B717C4735E98F0B3A64471277B
D37D6D87E6ACED0A11C9D70172FA270364BD59E3146A50ED4642D689B0694D10
B1340B4E53D6A82130505CE0B3594A14A000D42EF43C5E21571C2EF77617E846
576903821DA3003FF2037248E8F42BD1D02F7D6722430773B56012CD752D668D
F894C68AEC73A2ABFE104A6F2B0D8FE7433636F2CE11CD9314DAF055D36F7F8E
4B59BACA80DBAC21D4A3936E9C64B8ADFA86F49D86D9DEDDA8F7B8D8D1B6372B
ABD5ADB716739CAE856BD0556BB84C015FFFCFEE76C825182760FEC7771A66F5
1D3C83221FB978757170FE46C45F382DB6950AECFDC1A6248C1BA2FE041BFACF
6619B33F290EC0E28F5FCA85FE206D5431BCD641594E1AE6C15EBADCF179DFBB
EA8B1C58BA1E0D00A53671356098F637FE05DE12D31F7FB411E3E6F489332494
18DED56E0512756696BA5EFD59BDEAAAAC546AB68D685040A357EFC836937AD3
6E36DDC1416F885A9103E02577AA4B71A56248108B55676ADE41141C8BA1302C
BD19DCB1B518F5D0A9E2D025A73A195A37D8F996E85AD89D14470972D162EADE
4E1EC38409B2DD9AE5B2F903F687C402B42EF259A7BDB73AB2F24B9BDA278DEE
AE6A0556035AD6DB7BF3016F377F3D08E69086517D19925E88A4B493B53643C4
2FD0197377F036CAFCA57399C7816A962E00B838BBBC7898F35FF2DFF52D6BAC
711CA596910B9AA65ED205383671BAB74AE6BFB9178AAA92F4051ABF984BC81D
0BB8622235EDBD30FC7BEC65A95462FD6949A3CDD3A09BC77C39C00F95267CF7
1BB4C82719DD038DCE1FBEFDCA56B5E433BE76933481A0324664015CC146F9FB
E7E8B4DB59EA27EC30DA0D0018A149C1AB4F0D91524EC7D8270A5AD404C9C32A
AFA50750C279069FF47D5C89AD9808E6C9A05D7A1F8BFBC209C0F920ABF25712
B528E721E12F35255EB47772372318E37957E4F2B1917EFA9AB3C667DB9F3013
328ACA3247DE60564A109A16B57654AA6CC09EECB157BD1941DD839EAAFE9FF5
30DBC9BA83D69CD1ACD8EE7C61A9942DB5277963EED9A5A4E7B91FC7B60D903E
1924B8EFDD48B1F1291E0066EBDB52FFA38EFAB27E7FE18C57AE766852C21D0A
7523827E9208350B7FFAAFD6DCB075B774E1A9C5104B367E290942FBAB9E6D28
152B7A62AB2A528558D1C409DB832F3548958AF08EA24484C9B2C4A84B408A6A
3EFD4DA0145E43C0E9A419CF942D86177BCC508A001EBF54ABCD7E31FABDD5AB
A676077D3A7096571CA660FD3F251D656D4795CB1C94A7149D00C8A687A08EEB
911CB16D2128FE77BD2D9502D76FD1786C9D410CAA7A4283A5C61502786B1220
3DAAAFEB0CFD242269A36A57C9267BD984C15B1586086D2D1197859FFB15A635
2CEB1348C074BD5336B4B3D06FDCA9AABEB1AE6FB0F1528F236ABDD9949E3418
2ACA7EF08BB62CED839341B4628550E783198862E6A6BCD9126600D58B95D11A
AED799FBFF5DB6D2C7E87E97F25D0137DB13FC3B39738D11C976C33DD1FD1E58
B8616DB249E5079FB12064F35FB1133D7BB4BD52F3F23D103803D4B18C76860A
2CD100CE9088CB55472D7E3C94C099BA5760
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
16 dict begin
/FontName /PFVZWD+TimesNewRomanPS-ItalicMT def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/PFVZWD+TimesNewRomanPS-ItalicMT_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F7_0 /PFVZWD+TimesNewRomanPS-ItalicMT 0 pdfMakeFont16
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
-1 -1 322.4981 609.6743 re
W
[1 0 0 1 0 0] cm
false op
false OP
0 J
0 j
0.5669 w
22.925586 M
[] 0 d
/DeviceRGB {} CS
[0.17 0.16 0.16] SC
/DeviceRGB {} cs
[0.17 0.16 0.16] sc
0.2835 0.2835 319.9311 9.7506 re
f*
0.2835 0.2835 319.9311 9.7506 re
S
false op
false OP
0 J
0 j
2.8346 w
22.925586 M
[] 0 d
/DeviceRGB {} CS
[0.17 0.16 0.16] SC
/DeviceRGB {} cs
[1 1 1] sc
226.1188 454.2951 m
239.7053 450.5882 247.7143 436.5692 244.0074 422.9827 c
240.3006 409.3963 226.2815 401.3872 212.6951 405.0941 c
199.1086 408.801 191.0996 422.82 194.8065 436.4065 c
198.5134 449.9929 212.5324 458.0019 226.1188 454.2951 c
h
f*
226.1188 454.2951 m
239.7053 450.5882 247.7143 436.5692 244.0074 422.9827 c
240.3006 409.3963 226.2815 401.3872 212.6951 405.0941 c
199.1086 408.801 191.0996 422.82 194.8065 436.4065 c
198.5134 449.9929 212.5324 458.0019 226.1188 454.2951 c
h
S
false op
false OP
/DeviceRGB {} cs
[0.12 0.11 0.13] sc
226.1188 454.2951 m
239.7053 450.5882 247.7143 436.5692 244.0074 422.9827 c
219.407 429.6946 l
212.6951 405.0941 l
199.1086 408.801 191.0996 422.82 194.8065 436.4065 c
219.407 429.6946 l
226.1188 454.2951 l
h
f*
false op
false OP
/DeviceRGB {} cs
[0.6 0 0.63] sc
218.1543 429.0316 m
220.6596 430.3576 l
220.6922 430.2924 l
220.7208 430.2261 l
220.746 430.1592 l
220.7676 430.0917 l
220.7857 430.0237 l
220.8005 429.9554 l
220.8115 429.8868 l
220.8192 429.8179 l
220.8234 429.7493 l
220.8243 429.6804 l
220.822 429.6121 l
220.8163 429.5441 l
220.8073 429.4763 l
220.7951 429.4094 l
220.7798 429.3431 l
220.7614 429.2776 l
220.7398 429.2133 l
220.7151 429.1498 l
220.6877 429.0874 l
220.657 429.0265 l
220.6233 428.9669 l
220.587 428.9091 l
220.5476 428.853 l
220.5054 428.7983 l
220.4603 428.7458 l
220.4127 428.6954 l
220.3622 428.6469 l
220.3089 428.601 l
220.2531 428.5573 l
220.1947 428.5162 l
220.1335 428.4777 l
220.07 428.442 l
220.0048 428.4094 l
219.9385 428.3807 l
219.8716 428.3555 l
219.8041 428.334 l
219.7361 428.3158 l
219.6677 428.3011 l
219.5991 428.29 l
219.5303 428.2824 l
219.4617 428.2781 l
219.3928 428.2773 l
219.3245 428.2795 l
219.2564 428.2852 l
219.1887 428.2943 l
219.1218 428.3065 l
219.0555 428.3218 l
218.99 428.3402 l
218.9256 428.3617 l
218.8621 428.3864 l
218.7998 428.4139 l
218.7388 428.4445 l
218.6793 428.4782 l
218.6215 428.5145 l
218.5654 428.5539 l
218.5106 428.5962 l
218.4582 428.6412 l
218.4077 428.6889 l
218.3593 428.7393 l
218.3134 428.7926 l
218.2697 428.8484 l
218.2286 428.9068 l
218.19 428.9681 l
218.1543 429.0316 l
h
139.1389 584.3718 m
220.6596 430.3576 l
218.1543 429.0316 l
136.6336 583.0458 l
139.1389 584.3718 l
h
133.2213 592.5226 m
150.0199 578.9636 l
149.4298 578.9424 l
148.8472 578.9066 l
148.2727 578.8562 l
147.7057 578.791 l
147.1467 578.7111 l
146.5954 578.6167 l
146.0517 578.5075 l
145.516 578.3837 l
144.9879 578.245 l
144.4677 578.092 l
143.9552 577.9239 l
143.4504 577.7413 l
142.9534 577.544 l
142.4645 577.3323 l
141.9829 577.1055 l
141.5092 576.8643 l
141.0435 576.6083 l
140.5854 576.3376 l
140.135 576.0522 l
139.6925 575.7523 l
139.2576 575.4376 l
138.8307 575.1082 l
138.4115 574.7641 l
137.9999 574.4052 l
137.5963 574.0319 l
137.2003 573.6438 l
136.8122 573.241 l
136.4318 572.8235 l
136.059 572.3915 l
135.6942 571.9448 l
135.337 571.4833 l
134.9878 571.0071 l
134.9878 571.0071 l
133.2213 592.5226 l
h
139.1389 584.3718 m
136.6336 583.0458 l
136.601 583.111 l
136.5724 583.1773 l
136.5471 583.2442 l
136.5256 583.3117 l
136.5075 583.3797 l
136.4927 583.448 l
136.4817 583.5166 l
136.474 583.5855 l
136.4698 583.6541 l
136.4689 583.723 l
136.4712 583.7913 l
136.4769 583.8593 l
136.4859 583.9271 l
136.4981 583.994 l
136.5134 584.0603 l
136.5318 584.1258 l
136.5534 584.1901 l
136.578 584.2536 l
136.6055 584.316 l
136.6362 584.3769 l
136.6699 584.4365 l
136.7062 584.4943 l
136.7456 584.5504 l
136.7878 584.6051 l
136.8329 584.6576 l
136.8805 584.708 l
136.931 584.7565 l
136.9843 584.8024 l
137.0401 584.8461 l
137.0985 584.8872 l
137.1597 584.9257 l
137.2232 584.9614 l
137.2884 584.994 l
137.3547 585.0227 l
137.4216 585.0479 l
137.4891 585.0694 l
137.5571 585.0876 l
137.6254 585.1023 l
137.694 585.1134 l
137.7629 585.121 l
137.8315 585.1253 l
137.9004 585.1261 l
137.9687 585.1239 l
138.0368 585.1182 l
138.1045 585.1091 l
138.1714 585.0969 l
138.2377 585.0816 l
138.3032 585.0632 l
138.3676 585.0417 l
138.4311 585.017 l
138.4934 584.9895 l
138.5544 584.9589 l
138.6139 584.9252 l
138.6717 584.8889 l
138.7278 584.8495 l
138.7826 584.8072 l
138.835 584.7622 l
138.8854 584.7146 l
138.9339 584.6641 l
138.9798 584.6108 l
139.0235 584.555 l
139.0646 584.4966 l
139.1031 584.4353 l
139.1389 584.3718 l
h
f
false op
false OP
/DeviceRGB {} cs
[0.6 0 0.63] sc
[1 0 0 1 0 0] Tm
0 0 Td
133.4245 500.4269 Td
/F7_0 48 Tf
(\000\002) 1 21.312 Tj16
154.7286 490.8271 Td
/F7_0 24 Tf
(\000\003) 1 12 Tj16
false op
false OP
/DeviceRGB {} cs
[0 0.4 0.2] sc
235.4703 394.8131 m
236.6563 392.2381 l
236.5894 392.2092 l
236.5217 392.1843 l
236.4534 392.1627 l
236.3848 392.1449 l
236.3159 392.1304 l
236.2467 392.1197 l
236.1779 392.1126 l
236.1087 392.1086 l
236.0398 392.108 l
235.9712 392.1109 l
235.9029 392.1171 l
235.8351 392.1265 l
235.7683 392.1392 l
235.7019 392.1551 l
235.6367 392.1741 l
235.5724 392.1959 l
235.5092 392.2211 l
235.4471 392.2492 l
235.3864 392.2801 l
235.3272 392.3141 l
235.2696 392.351 l
235.2138 392.3906 l
235.1599 392.4329 l
235.1078 392.4782 l
235.0579 392.5259 l
235.01 392.5766 l
234.9646 392.6296 l
234.9215 392.6852 l
234.881 392.7436 l
234.843 392.8039 l
234.8082 392.8671 l
234.7758 392.9326 l
234.7469 392.9995 l
234.722 393.0673 l
234.7004 393.1356 l
234.6826 393.2042 l
234.6681 393.2731 l
234.6574 393.3422 l
234.6503 393.4111 l
234.6463 393.4803 l
234.6457 393.5492 l
234.6486 393.6178 l
234.6548 393.6861 l
234.6642 393.7538 l
234.6769 393.8207 l
234.6928 393.8871 l
234.7118 393.9523 l
234.7336 394.0166 l
234.7588 394.0798 l
234.7869 394.1419 l
234.8178 394.2026 l
234.8518 394.2618 l
234.8887 394.3193 l
234.9283 394.3752 l
234.9706 394.429 l
235.0159 394.4812 l
235.0636 394.5311 l
235.1143 394.579 l
235.1673 394.6243 l
235.2229 394.6674 l
235.2813 394.708 l
235.3416 394.746 l
235.4049 394.7808 l
235.4703 394.8131 l
h
257.8096 429.6946 m
260.6443 429.6946 l
260.6443 429.6946 l
260.617 428.1902 l
260.5354 426.6955 l
260.4008 425.2119 l
260.2134 423.7398 l
259.9739 422.2814 l
259.6833 420.8377 l
259.3426 419.4094 l
258.9523 417.998 l
258.5129 416.6045 l
258.0253 415.2305 l
257.4907 413.8767 l
256.9096 412.5444 l
256.2823 411.2348 l
255.6099 409.9493 l
254.8936 408.6893 l
254.1331 407.4548 l
253.33 406.2481 l
252.485 405.0703 l
251.5989 403.922 l
250.6717 402.8046 l
249.7048 401.7195 l
248.6988 400.6672 l
247.6545 399.6496 l
246.5728 398.668 l
245.454 397.7229 l
244.2991 396.8158 l
243.1091 395.9481 l
241.8846 395.1204 l
240.626 394.3346 l
239.3348 393.5917 l
238.0113 392.8924 l
236.6563 392.2381 l
235.4703 394.8131 l
236.7329 395.4226 l
237.9657 396.0737 l
239.1684 396.7656 l
240.3403 397.4975 l
241.4803 398.268 l
242.5887 399.0762 l
243.6636 399.9203 l
244.7053 400.8008 l
245.7128 401.7149 l
246.685 402.6623 l
247.6219 403.6419 l
248.5225 404.6528 l
249.3856 405.6931 l
250.2111 406.7626 l
250.9982 407.8599 l
251.7463 408.9838 l
252.4541 410.1333 l
253.1217 411.3071 l
253.7476 412.5042 l
254.3318 413.7236 l
254.8732 414.9641 l
255.371 416.2249 l
255.8251 417.5048 l
256.2338 418.8019 l
256.5975 420.1163 l
256.915 421.446 l
257.1851 422.7905 l
257.4082 424.1486 l
257.5826 425.5191 l
257.7081 426.9008 l
257.7841 428.2929 l
257.8096 429.6946 l
h
248.5987 454.6463 m
250.7536 456.4882 l
251.3435 455.7821 l
251.9167 455.0644 l
252.4725 454.3356 l
253.0114 453.5957 l
253.5327 452.8451 l
254.0367 452.0843 l
254.5231 451.3133 l
254.9917 450.5329 l
255.443 449.7426 l
255.8761 448.9435 l
256.2911 448.1357 l
256.6882 447.3193 l
257.0669 446.4947 l
257.4275 445.6621 l
257.7691 444.8222 l
258.0925 443.9752 l
258.3975 443.1212 l
258.683 442.2606 l
258.95 441.3937 l
259.198 440.5204 l
259.4265 439.6419 l
259.636 438.7581 l
259.8262 437.8691 l
259.9965 436.9754 l
260.1473 436.0776 l
260.2786 435.1757 l
260.3897 434.2694 l
260.481 433.3603 l
260.5524 432.4479 l
260.6034 431.5323 l
260.634 430.6144 l
260.6443 429.6946 l
257.8096 429.6946 l
257.8 430.5515 l
257.7716 431.4064 l
257.724 432.2585 l
257.6577 433.1081 l
257.5726 433.9553 l
257.4689 434.7986 l
257.3467 435.6388 l
257.2061 436.4753 l
257.0477 437.3073 l
256.8705 438.135 l
256.6757 438.9582 l
256.4626 439.7766 l
256.2321 440.5893 l
255.9832 441.3966 l
255.7171 442.1982 l
255.4336 442.9933 l
255.1323 443.7825 l
254.814 444.5646 l
254.4783 445.3398 l
254.1257 446.1077 l
253.7558 446.868 l
253.3691 447.6203 l
252.966 448.3644 l
252.546 449.1003 l
252.1091 449.8274 l
251.6562 450.5451 l
251.1867 451.2538 l
250.7012 451.9528 l
250.1997 452.6416 l
249.6818 453.3205 l
249.1483 453.9889 l
248.5987 454.6463 l
h
243.1962 463.1482 m
262.5551 453.5898 l
261.9839 453.4401 l
261.4232 453.2777 l
260.8736 453.1028 l
260.3344 452.9151 l
259.8063 452.715 l
259.289 452.5024 l
258.7825 452.2768 l
258.2867 452.0387 l
257.8017 451.7881 l
257.3274 451.5248 l
256.864 451.2489 l
256.4113 450.9604 l
255.9696 450.6591 l
255.5385 450.3453 l
255.1184 450.019 l
254.7088 449.68 l
254.3102 449.3282 l
253.9222 448.9639 l
253.5452 448.5869 l
253.1789 448.1974 l
252.8235 447.7952 l
252.4788 447.3802 l
252.1449 446.9528 l
251.8217 446.5128 l
251.5093 446.0601 l
251.208 445.5947 l
250.9172 445.1168 l
250.6374 444.6261 l
250.3681 444.1229 l
250.1099 443.607 l
249.8621 443.0786 l
249.6254 442.5375 l
249.6254 442.5375 l
243.1962 463.1482 l
h
250.7536 456.4882 m
248.5987 454.6463 l
248.5528 454.703 l
248.51 454.7611 l
248.4709 454.8209 l
248.4351 454.8821 l
248.4026 454.9445 l
248.3734 455.008 l
248.3476 455.0726 l
248.3249 455.1381 l
248.3056 455.2041 l
248.2897 455.271 l
248.2773 455.3382 l
248.2679 455.406 l
248.2617 455.474 l
248.2591 455.542 l
248.2594 455.61 l
248.2631 455.6778 l
248.2702 455.7455 l
248.2801 455.8127 l
248.2934 455.8796 l
248.3101 455.9457 l
248.33 456.0111 l
248.3529 456.0758 l
248.379 456.1393 l
248.4082 456.2016 l
248.4405 456.2626 l
248.4763 456.3224 l
248.5148 456.3805 l
248.5568 456.4372 l
248.6018 456.4919 l
248.6497 456.5449 l
248.701 456.5959 l
248.7552 456.6447 l
248.8119 456.6906 l
248.87 456.7334 l
248.9298 456.7725 l
248.991 456.8083 l
249.0534 456.8409 l
249.1169 456.87 l
249.1815 456.8958 l
249.247 456.9185 l
249.313 456.9378 l
249.3799 456.9537 l
249.4471 456.9661 l
249.5149 456.9755 l
249.5829 456.9817 l
249.6509 456.9843 l
249.719 456.984 l
249.7867 456.9803 l
249.8545 456.9732 l
249.9216 456.9633 l
249.9885 456.95 l
250.0546 456.9333 l
250.1201 456.9134 l
250.1847 456.8905 l
250.2482 456.8644 l
250.3106 456.8352 l
250.3715 456.8029 l
250.4313 456.7671 l
250.4894 456.7286 l
250.5461 456.6866 l
250.6008 456.6416 l
250.6538 456.5937 l
250.7049 456.5424 l
250.7536 456.4882 l
h
f
false op
false OP
/DeviceRGB {} cs
[0 0.4 0.2] sc
[1 0 0 1 0 0] Tm
0 0 Td
272.9245 412.6768 Td
/F7_0 48 Tf
(\000\002) 1 21.312 Tj16
294.2286 403.0767 Td
/F7_0 24 Tf
(\000\004) 1 12 Tj16
false op
false OP
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font PFVZWD+TimesNewRomanPS-ItalicMT
%%EOF
